[{"id":"84180f09.66579","type":"tab","label":"Flow 6","disabled":false,"info":""},{"id":"dd60fc28.9b2e","type":"inject","z":"84180f09.66579","name":"Manual - One Time Only initialization of Blockchain Network Demo","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":240,"y":100,"wires":[["98b2f80a.a35f"]]},{"id":"98b2f80a.a35f","type":"change","z":"84180f09.66579","name":"Set HyperLedgerFabricIP","rules":[{"t":"set","p":"HyperLedgerFabricIP","pt":"global","to":"<your Hyperledger Fabric Public IP>","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":620,"y":100,"wires":[["f37741c5.87a6a"]]},{"id":"f37741c5.87a6a","type":"change","z":"84180f09.66579","name":"Begin Perishable Shipment Demo","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"$class\":\"org.acme.shipping.perishable.SetupDemo\"}","tot":"json"},{"t":"set","p":"FabricIP","pt":"msg","to":"HyperLedgerFabricIP","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":335,"y":60,"wires":[["4ffd5c8c.55af04"]]},{"id":"4ffd5c8c.55af04","type":"http request","z":"84180f09.66579","name":"hyperledger - Create Persishable Demo","method":"POST","ret":"obj","url":"http://{{FabricIP}}:3000/api/SetupDemo","tls":"","x":680,"y":60,"wires":[["7d979b9d.9dfc2c"]]},{"id":"7d979b9d.9dfc2c","type":"debug","z":"84180f09.66579","name":"Blockchain Asset response","active":true,"console":"false","complete":"true","x":990,"y":60,"wires":[]},{"id":"f06d996d.32692","type":"inject","z":"84180f09.66579","name":"Start Collect data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":230,"wires":[["a8d869ed.4c4ba"]]},{"id":"a8d869ed.4c4ba","type":"function","z":"84180f09.66579","name":"Build a TemperatureReading Transaction","func":"// A TemperatureReading Blockchain transaction looks like this:\n//      {\n//      \"$class\": \"org.acme.shipping.perishable.TemperatureReading\",\n//      \"celsius\": 0,\n//      \"latitude\": \"string\",\n//      \"longitude\": \"string\",\n//      \"readingTime\": \"string\",\n//      \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//      }\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent which looks like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n\nmsg.payload = {\n  \"$class\"     : \"org.acme.shipping.perishable.TemperatureReading\",\n  \"celsius\"    : Math.random() * 4 +35,\n  \"readingTime\": Math.random() * 4 +35,\n  \"latitude\"   : Math.random() * 75 + 2000,\n  \"longitude\"  : Math.random() * 60 + 2000,\n  \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#320022000251363131363432\"};\nTempReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":3000/api/TemperatureReading?data=\"+TempReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":230,"wires":[["ae24e064.ab18a","638c5b74.fbd744"]]},{"id":"638c5b74.fbd744","type":"http request","z":"84180f09.66579","name":"Blockchain POST TemperatureReading","method":"POST","ret":"obj","url":"http://FabricIP:3000/api/TemperatureReading","tls":"","x":780,"y":230,"wires":[["f368897e.04e9d"]]},{"id":"ae24e064.ab18a","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":700,"y":180,"wires":[]},{"id":"f368897e.04e9d","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":1050,"y":230,"wires":[]},{"id":"f33c0944.aa4208","type":"inject","z":"84180f09.66579","name":"Start Collect data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":370,"wires":[["48819d0a.467ab4"]]},{"id":"48819d0a.467ab4","type":"function","z":"84180f09.66579","name":"Build a AccelReading Transaction","func":"// An AccelReading Blockchain transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.AccelReading\",\n//   \"accel_x\": 0,\n//   \"accel_y\": 0,\n//   \"accel_z\": 0,\n//   \"latitude\": \"string\",\n//   \"longitude\": \"string\",\n//   \"readingTime\": \"string\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//   }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerAccelerationEvent which looks like this:\n// Example:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\nvar d1 = new Date();\n\nvar readingTime = d1.getHours() + \":\" +  d1.getMinutes() + \":\" + d1.getSeconds();\nmsg.payload = {\n    \"$class\"     : \"org.acme.shipping.perishable.AccelReading\",\n    \"accel_x\"    : Math.random() * 4 +50,\n    \"accel_y\"    : Math.random() * 4 +90,\n    \"accel_z\"    : Math.random() * 4 +70,\n    \"readingTime\": readingTime,\n    \"latitude\"   : Math.random() * 4 +35,\n    \"longitude\"  : Math.random() * 4 +35,\n    \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#320022000251363131363432\"};\nAccelReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":3000/api/AccelReading?data=\"+AccelReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":370,"wires":[["f7f26920.59f34","b7d25878.be1b38"]]},{"id":"b7d25878.be1b38","type":"http request","z":"84180f09.66579","name":"Blockchain POST AccelReading","method":"POST","ret":"obj","url":"http://FabricIP:3000/api/AccelReading","tls":"","x":760,"y":370,"wires":[["107f238.af7285d"]]},{"id":"f7f26920.59f34","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":700,"y":332,"wires":[]},{"id":"107f238.af7285d","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":1050,"y":370,"wires":[]},{"id":"7aa6fd6f.f6b444","type":"inject","z":"84180f09.66579","name":"Start Collect data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":470,"wires":[["758b88e6.8e0a"]]},{"id":"758b88e6.8e0a","type":"function","z":"84180f09.66579","name":"Build a GpsReading Transaction","func":"// A GpsReading transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n//   \"readingTime\": \"\",\n//   \"readingDate\": \"\",\n//   \"latitude\": \"\",\n//   \"latitudeDir\": \"N\",\n//   \"longitude\": \"\",\n//   \"longitudeDir\": \"N\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//    }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent or AssetTrackerAccelerationEvent\n// The msg.payload will look like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n//\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\n// Not certain why the Perishable Model splits the readingTime and readingDate. \n// That's useless, just store the timestamp (which is preserved in readingTime)\n// The model validation won't allow a blank readingDate so construct the properly formatted date here\nvar msec = Date.parse(msg.payload.timestamp);\nvar d = new Date(msec);\nvar ReadingDate = d.getFullYear() + \"-\" + ('0' + (d.getMonth()+1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\nvar d1 = new Date();\nvar readingDate = d1.getFullYear() + \"-\" + (d1.getMonth()+1) + \"-\" + d1.getDate();\nvar readingTime = d1.getHours() + \":\" +  d1.getMinutes() + \":\" + d1.getSeconds();\n\nmsg.payload = {\n  \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n  \"readingTime\": readingTime,\n  \"readingDate\": readingDate,\n  \"latitude\": Math.random() * 4 +35,\n  \"latitudeDir\": \"N\",\n  \"longitude\": Math.random() * 4 +35,\n  \"longitudeDir\": \"N\",\n  \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#320022000251363131363432\"};\nGpsReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":3000/api/GpsReading?data=\"+GpsReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":470,"wires":[["39cf7592.a2df8a","21c2ad4b.10b68a"]]},{"id":"21c2ad4b.10b68a","type":"http request","z":"84180f09.66579","name":"Blockchain POST GpsReading","method":"POST","ret":"obj","url":"http://FabricIP:3000/api/GpsReading","tls":"","x":760,"y":470,"wires":[["84bb6904.e871c8"]]},{"id":"39cf7592.a2df8a","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":700,"y":432,"wires":[]},{"id":"84bb6904.e871c8","type":"debug","z":"84180f09.66579","name":"","active":true,"console":"false","complete":"false","x":1050,"y":470,"wires":[]}]